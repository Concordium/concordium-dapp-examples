name: Build Docker Containers

on:
  push:
    branches: main

  pull_request:
    branches: main
    paths:
      - 'euroe-demo/**'
      - 'signMessage/**'
      - 'simpleAgeVerification/**'
      - 'gallery/**' 
      - 'deps/concordium-rust-sdk'
      - 'sponsoredTransactions/**'
      - 'sponsoredTransactionsAuction/**'
      - '!**.md'

  workflow_dispatch: # allows manual trigger

env:
  DOCKER_DIR: '.'

jobs:
  changes:
    name: detect what files changed
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      directories: ${{ steps.changes.outputs.changes }}
    steps:
      - uses: actions/checkout@v4

      - name: Check for backend file changes
        uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          filters: |
            euroe-demo:
              - 'euroe-demo/**'
            signMessage:
              - 'signMessage/**'
            simpleAgeVerification:
              - 'simpleAgeVerification/**'
            gallery:
              - 'gallery/**'
              - 'deps/concordium-rust-sdk'
            sponsoredTransactions:
              - 'sponsoredTransactions/**'
              - 'deps/concordium-rust-sdk'
            sponsoredTransactionsAuction:
              - 'sponsoredTransactionsAuction/**'
              - 'deps'


  build:
    name: Building Docker Containers
    # Require the diff job.
    needs: changes
    # Don't run on draft pull requests
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # JSON array contains all directories with docker images and changed files
        # e.g. ['euroe-demo', 'signMessage'] if both package folders contains changes
        image: ${{ fromJSON(needs.changes.outputs.directories) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Build image
      working-directory: ${{ env.DOCKER_DIR }}
      run:
        echo "${{ matrix.image }} is the matrix image to build"
  
    - name: Set the directory to build from to the dapp's rather than repo root where needed.
      if: ${{ contains(fromJson('["euroe-demo", "signMessage", "simpleAgeVerification"]'), matrix.image) }}
      run:
        echo "DOCKER_DIR=./${{ matrix.image }}" >> $GITHUB_ENV

        
    - name: Build image
      working-directory: ${{ env.DOCKER_DIR }}
      run: |
        echo "DOCKER_DIR is ${DOCKER_DIR}"
        pwd
        docker build -f ${{ matrix.image }}/Dockerfile .

  # compose-build:
  #   name: Building with docker compose
  #   # Don't run on draft pull requests
  #   if: ${{ !github.event.pull_request.draft }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       directories:
  #         - trackAndTrace
  #         - compliant-reward-distribution

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #     with:
  #       submodules: recursive

  #   - name: Build with docker compose
  #     working-directory: ${{ matrix.directories }}
  #     env:
  #       # Dummy values are set for the `trackAndTrace` run because `docker compose build`
  #       # enforces the presence of environment variables during the build phase,
  #       # even though these variables are only needed at runtime.
  #       TRACK_AND_TRACE_CONTRACT_ADDRESS: "<8351,0>"
  #       TRACK_AND_TRACE_PRIVATE_KEY_FILE: "./trackAndTrace/README.md"
  #     run:
  #       docker compose build
